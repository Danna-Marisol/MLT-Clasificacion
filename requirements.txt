Bibliotecas mínimas necesarias para correr el proyecto1:  Machine Learning Tradicional -Clasificación
=========================================================================
Las librerias necesarias para correr el proyecto son:

	pandas
	numpy
	matplotlib
	sklearn
	mlflow
	pyngrok
	joblib
	os

========================================================================
Se encuentran invocados de la siguiente manera:



	Para el primer notebook: Analisis_exploratorio

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import os


	Para el segundo notebook: Preprocesamiento

import pandas as pd
import numpy as np
from sklearn.feature_selection import mutual_info_classif
from sklearn.preprocessing import LabelEncoder


	Para el tercer notebook: Entrenamiento_y_validación_del_modelo

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import mean_absolute_error, accuracy_score


	Para el cuarto notebook: Evaluación_final_y_exportacion

import pandas as pd
import numpy as np
import mlflow
import mlflow.sklearn
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import (accuracy_score, mean_absolute_error, precision_score, recall_score, f1_score, mean_squared_error, roc_curve, confusion_matrix, ConfusionMatrixDisplay)
from pyngrok import ngrok
import pandas as pd
import joblib
import os
import matplotlib.pyplot as plt

========================================================================
Próposito de cada librería única:


	Manipulación y análisis de datos:

pandas : Manipulación de DataFrames/tablas
numpy : Operaciones numéricas y arreglos eficientes

	
	Preprocesamiento y selección de características:

sklearn.preprocessing : Normalización y codificación (por ejemplo, MinMaxScaler, LabelEncoder)
sklearn.feature_selection : Selección de variables relevantes (mutual_info_classif)


	Modelado y algoritmos de ML:

sklearn.model_selection : División de datos para entrenamiento y validación (train_test_split)
sklearn.linear_model : Modelos lineales como LogisticRegression
sklearn.tree : Árboles de decisión (DecisionTreeClassifier)
sklearn.ensemble : Modelos como RandomForestClassifier


	Evaluación de modelos:

sklearn.metrics : Métricas de rendimiento como accuracy_score, mean_absolute_error, precision_score, recall_score, f1_score, mean_squared_error, roc_curve, confusion_matrix, ConfusionMatrixDisplay


	Experimentación y registro:

mlflow : Registro de modelos, métricas, artefactos
mlflow.sklearn : Registro de modelos scikit-learn en MLflow


	Exposición del servidor local:

pyngrok : Crear túneles públicos a puertos locales (útil para exponer la interfaz web de MLflow en Colab o notebooks)


	Serialización y guardado:

joblib : Guardar y cargar modelos (archivos .pkl)


	Visualización:

matplotlib.pyplot : Gráficas como la curva ROC o la matriz de confusión


	Utilidades del sistema:

os : Manejo del sistema operativo: rutas, archivos, configuración